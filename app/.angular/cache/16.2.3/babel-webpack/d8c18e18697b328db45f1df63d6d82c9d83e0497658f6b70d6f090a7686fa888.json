{"ast":null,"code":"var _class;\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment.development\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  addProduct(form, files) {\n    const url = environment.apiUrl + \"add/\";\n    const formData = new FormData();\n    for (const file of files) {\n      formData.append(\"pictures\", file, file.name);\n    }\n    formData.append(\"product\", form);\n    console.log(formData.get('product'));\n    let token = sessionStorage.getItem('token');\n    if (token === null) {\n      token = \"\";\n    }\n    const headers = new HttpHeaders().set('Authorization', token);\n    //return this.http.post(url, formData, {headers: headers});\n  }\n}\n_class = ProductService;\n_class.ɵfac = function ProductService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["HttpHeaders","environment","ProductService","constructor","http","addProduct","form","files","url","apiUrl","formData","FormData","file","append","name","console","log","get","token","sessionStorage","getItem","headers","set","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Kamil\\WebstormProjects\\clothes-exchange\\app\\src\\app\\shared\\services\\product.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\n\r\nimport {environment} from \"../../../environments/environment.development\";\r\n\r\n@Injectable({providedIn: \"root\"})\r\nexport class ProductService{\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addProduct(form: any, files: File[]){\r\n    const url = environment.apiUrl + \"add/\";\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n      formData.append(\"pictures\", file, file.name);\r\n    }\r\n    formData.append(\"product\", form);\r\n\r\n    console.log(formData.get('product'));\r\n\r\n    let token = sessionStorage.getItem('token');\r\n    if(token === null){\r\n      token = \"\";\r\n    }\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Authorization', token);\r\n    //return this.http.post(url, formData, {headers: headers});\r\n  }\r\n\r\n}\r\n"],"mappings":";AACA,SAAoBA,WAAW,QAAO,sBAAsB;AAG5D,SAAQC,WAAW,QAAO,+CAA+C;;;AAGzE,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,UAAUA,CAACC,IAAS,EAAEC,KAAa;IACjC,MAAMC,GAAG,GAAGP,WAAW,CAACQ,MAAM,GAAG,MAAM;IACvC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,KAAK,MAAMC,IAAI,IAAIL,KAAK,EAAE;MACxBG,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAED,IAAI,EAAEA,IAAI,CAACE,IAAI,CAAC;;IAE9CJ,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEP,IAAI,CAAC;IAEhCS,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACO,GAAG,CAAC,SAAS,CAAC,CAAC;IAEpC,IAAIC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAGF,KAAK,KAAK,IAAI,EAAC;MAChBA,KAAK,GAAG,EAAE;;IAGZ,MAAMG,OAAO,GAAG,IAAIrB,WAAW,EAAE,CAC9BsB,GAAG,CAAC,eAAe,EAAEJ,KAAK,CAAC;IAC9B;EACF;;SAtBWhB,cAAc;;mBAAdA,MAAc,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdxB,MAAc;EAAAyB,OAAA,EAAdzB,MAAc,CAAA0B,IAAA;EAAAC,UAAA,EADF;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}