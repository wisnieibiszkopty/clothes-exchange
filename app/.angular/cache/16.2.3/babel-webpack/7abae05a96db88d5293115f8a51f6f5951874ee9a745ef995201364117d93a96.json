{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\n// setup guard and better validation\nexport class SigninComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.signIdEmitter = new EventEmitter();\n    this.signInForm = new FormGroup({\n      \"email\": new FormControl('', [Validators.required, Validators.email]),\n      \"password\": new FormControl('', [Validators.required])\n    });\n  }\n  onSubmit() {\n    const form = this.signInForm.value;\n    this.authService.signIn(form).subscribe({\n      next: id => {\n        console.log(\"Logged in correctly\");\n        this.signIdEmitter.emit(id);\n      },\n      error: err => {\n        console.error(err);\n      }\n    });\n  }\n}\n_class = SigninComponent;\n_class.ɵfac = function SigninComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-signin\"]],\n  outputs: {\n    signIdEmitter: \"signIdEmitter\"\n  },\n  decls: 14,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function SigninComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\", 1);\n      i0.ɵɵtext(4, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 3);\n      i0.ɵɵtext(8, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\")(11, \"button\", 5);\n      i0.ɵɵtext(12, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtext(13, \"\\ncd\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.signInForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"disabled\", !ctx.signInForm.valid);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"[_nghost-%COMP%]{\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\ndiv[_ngcontent-%COMP%]{\\n  border: 1px solid black;\\n  width: 40%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2lnbmluL3NpZ25pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsVUFBVTtBQUNaIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3R7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG5kaXZ7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgd2lkdGg6IDQwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["EventEmitter","FormControl","FormGroup","Validators","SigninComponent","constructor","authService","signIdEmitter","signInForm","required","email","onSubmit","form","value","signIn","subscribe","next","id","console","log","emit","error","err","i0","ɵɵdirectiveInject","i1","AuthService","selectors","outputs","decls","vars","consts","template","SigninComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SigninComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","valid"],"sources":["C:\\Users\\Kamil\\WebstormProjects\\clothes-exchange\\app\\src\\app\\signin\\signin.component.ts","C:\\Users\\Kamil\\WebstormProjects\\clothes-exchange\\app\\src\\app\\signin\\signin.component.html"],"sourcesContent":["import {Component, EventEmitter, Output} from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"../shared/services/auth.service\";\r\n\r\n// setup guard and better validation\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent {\r\n  signInForm: FormGroup;\r\n  @Output() signIdEmitter = new EventEmitter<number>();\r\n\r\n  constructor(private authService: AuthService) {\r\n    this.signInForm = new FormGroup({\r\n      \"email\": new FormControl('', [Validators.required, Validators.email]),\r\n      \"password\": new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  onSubmit(): void{\r\n    const form = this.signInForm.value;\r\n    this.authService.signIn(form).subscribe({\r\n      next: (id: number): void => {\r\n        console.log(\"Logged in correctly\");\r\n        this.signIdEmitter.emit(id);\r\n      },\r\n      error: (err) => {\r\n        console.error(err);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div>\r\n  <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div>\r\n      <label for=\"email\">E-mail</label>\r\n      <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n    </div>\r\n    <div>\r\n      <label for=\"password\">Password</label>\r\n      <input id=\"password\" type=\"password\" formControlName=\"password\">\r\n    </div>\r\n    <div>\r\n      <button [disabled]=\"!signInForm.valid\" type=\"submit\">Submit</button>\r\n    </div>\r\n  </form>\r\n</div>\r\ncd\r\n"],"mappings":";AAAA,SAAmBA,YAAY,QAAe,eAAe;AAC7D,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAGnE;AAOA,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAFrB,KAAAC,aAAa,GAAG,IAAIP,YAAY,EAAU;IAGlD,IAAI,CAACQ,UAAU,GAAG,IAAIN,SAAS,CAAC;MAC9B,OAAO,EAAE,IAAID,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,KAAK,CAAC,CAAC;MACrE,UAAU,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,CAAC;KACtD,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAG,IAAI,CAACJ,UAAU,CAACK,KAAK;IAClC,IAAI,CAACP,WAAW,CAACQ,MAAM,CAACF,IAAI,CAAC,CAACG,SAAS,CAAC;MACtCC,IAAI,EAAGC,EAAU,IAAU;QACzBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC,IAAI,CAACZ,aAAa,CAACa,IAAI,CAACH,EAAE,CAAC;MAC7B,CAAC;MACDI,KAAK,EAAGC,GAAG,IAAI;QACbJ,OAAO,CAACG,KAAK,CAACC,GAAG,CAAC;MACpB;KACD,CAAC;EACJ;;SAtBWlB,eAAe;;mBAAfA,MAAe,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAftB,MAAe;EAAAuB,SAAA;EAAAC,OAAA;IAAArB,aAAA;EAAA;EAAAsB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX5BX,EAAA,CAAAa,cAAA,UAAK;MAC4Bb,EAAA,CAAAc,UAAA,sBAAAC,kDAAA;QAAA,OAAYH,GAAA,CAAAxB,QAAA,EAAU;MAAA,EAAC;MACpDY,EAAA,CAAAa,cAAA,UAAK;MACgBb,EAAA,CAAAgB,MAAA,aAAM;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MACjCjB,EAAA,CAAAkB,SAAA,eAAuD;MACzDlB,EAAA,CAAAiB,YAAA,EAAM;MACNjB,EAAA,CAAAa,cAAA,UAAK;MACmBb,EAAA,CAAAgB,MAAA,eAAQ;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MACtCjB,EAAA,CAAAkB,SAAA,eAAgE;MAClElB,EAAA,CAAAiB,YAAA,EAAM;MACNjB,EAAA,CAAAa,cAAA,WAAK;MACkDb,EAAA,CAAAgB,MAAA,cAAM;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;MAI1EjB,EAAA,CAAAgB,MAAA,cACA;;;MAfQhB,EAAA,CAAAmB,SAAA,GAAwB;MAAxBnB,EAAA,CAAAoB,UAAA,cAAAR,GAAA,CAAA3B,UAAA,CAAwB;MAUlBe,EAAA,CAAAmB,SAAA,IAA8B;MAA9BnB,EAAA,CAAAoB,UAAA,cAAAR,GAAA,CAAA3B,UAAA,CAAAoC,KAAA,CAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}