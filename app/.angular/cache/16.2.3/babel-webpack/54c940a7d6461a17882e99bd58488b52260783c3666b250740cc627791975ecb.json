{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/auth.service\";\nimport * as i2 from \"@angular/forms\";\n// Add custom password validation, also check if name and email exists in database\nexport class SignupComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.signUpForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      repeatPassword: new FormControl('', [Validators.required, Validators.minLength(8)])\n    });\n  }\n  onSubmit() {\n    console.log(this.signUpForm.value);\n    const form = this.signUpForm.value;\n    const user = {\n      \"name\": form.name,\n      \"email\": form.email,\n      \"password\": form.password\n    };\n    this.authService.signUp(user).subscribe({\n      next: data => {\n        console.log(\"Succesfully registered\");\n      },\n      error: err => {\n        console.error(\"Something goes wrong\");\n      }\n    });\n  }\n}\n_class = SignupComponent;\n_class.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-signup\"]],\n  decls: 21,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [\"for\", \"repeatPassword\"], [\"id\", \"repeatPassword\", \"type\", \"password\", \"formControlName\", \"repeatPassword\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\", 1);\n      i0.ɵɵtext(4, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\")(7, \"label\", 3);\n      i0.ɵɵtext(8, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\")(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\")(15, \"label\", 7);\n      i0.ɵɵtext(16, \"Repeat password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\")(19, \"button\", 9);\n      i0.ɵɵtext(20, \"Sign in\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"disabled\", !ctx.signUpForm.valid);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","SignupComponent","constructor","authService","signUpForm","name","required","email","password","minLength","repeatPassword","onSubmit","console","log","value","form","user","signUp","subscribe","next","data","error","err","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SignupComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","valid"],"sources":["C:\\Users\\Kamil\\WebstormProjects\\clothes-exchange\\app\\src\\app\\signup\\signup.component.ts","C:\\Users\\Kamil\\WebstormProjects\\clothes-exchange\\app\\src\\app\\signup\\signup.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthService} from \"../shared/services/auth.service\";\r\n\r\n// Add custom password validation, also check if name and email exists in database\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent {\r\n  signUpForm: FormGroup;\r\n\r\n  constructor(private authService: AuthService) {\r\n    this.signUpForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      repeatPassword: new FormControl('', [Validators.required, Validators.minLength(8)])\r\n    });\r\n  }\r\n\r\n  onSubmit(): void{\r\n    console.log(this.signUpForm.value);\r\n    const form = this.signUpForm.value;\r\n    const user = {\"name\": form.name, \"email\": form.email, \"password\": form.password};\r\n    this.authService.signUp(user).subscribe({\r\n      next: ((data) => {\r\n        console.log(\"Succesfully registered\");\r\n      }),\r\n      error: ((err) => {\r\n        console.error(\"Something goes wrong\");\r\n      })\r\n    });\r\n  }\r\n}\r\n","<div>\r\n  <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div>\r\n      <label for=\"name\">Name</label>\r\n      <input id=\"name\" type=\"text\" formControlName=\"name\">\r\n    </div>\r\n    <div>\r\n      <label for=\"email\">E-mail</label>\r\n      <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n    </div>\r\n    <div>\r\n      <label for=\"password\">Password</label>\r\n      <input id=\"password\" type=\"password\" formControlName=\"password\">\r\n    </div>\r\n    <div>\r\n      <label for=\"repeatPassword\">Repeat password</label>\r\n      <input id=\"repeatPassword\" type=\"password\" formControlName=\"repeatPassword\">\r\n    </div>\r\n    <div>\r\n      <button [disabled]=\"!signUpForm.valid\"  type=\"submit\">Sign in</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}